name: Docker

on:
  push:
    branches: [ main ]
  # pull_request:
  #   branches: [ main ]

env:
  REGISTRY: registry.cn-hangzhou.aliyuncs.com
  ALIYUN_REGISTRY_USER: "${{ secrets.ALIYUN_REGISTRY_USER }}"
  ALIYUN_REGISTRY_PASSWORD: "${{ secrets.ALIYUN_REGISTRY_PASSWORD }}"
  ALIYUN_HUB_NAME: "${{ secrets.ALIYUN_HUB_NAME }}"
  MM_NOTIFY_URL: "${{ secrets.MM_NOTIFY_URL }}"
  HEARTCHECK_URL: "${{ secrets.HEARTCHECK_URL }}"
  PUSHDEER_URL: "${{ secrets.PUSHDEER_URL }}"
  PUSHDEER_API_KEY: "${{ secrets.PUSHDEER_API_KEY }}"

jobs:

  build:
    name: Pull and Push Docker Images
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Replace HUB_NAME_PLACEHOLDER
      run: sh replace_hub_name.sh

    - name: Verify trigger.txt content
      run: cat trigger.txt

    - name: Setup QEMU
      uses: docker/setup-qemu-action@v2


    - name: Login to Docker registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.ALIYUN_REGISTRY_USER }}
        password: ${{ secrets.ALIYUN_REGISTRY_PASSWORD }}

    - name: Pull, tag, and push images
      run: |
        #!/bin/bash

        handle_image() {
            local image=$1
            local target=$2
            local arch=$3

            echo "Pulling ${image} for ${arch}..."
            docker pull --platform linux/${arch} ${image}

            echo "Tagging ${image} as ${target} for ${arch}..."
            docker tag ${image} ${target}

            echo "Pushing ${target} for ${arch}..."
            docker push ${target}
        }

        while IFS=" " read -r src_image target_image; do
            handle_image ${src_image} ${target_image} "arm64"
            handle_image ${src_image} ${target_image} "amd64"
        done < trigger.txt

    - name: Send notification
      run: |
        data=$(awk '{print $1}' trigger.txt | paste -sd " " -)
        if [ -n "$PUSHDEER_URL" ]; then
          curl -X POST $PUSHDEER_URL \
               -d "pushkey=$PUSHDEER_API_KEY" \
               -d "text=镜像同步成功！ $data"
        fi

    - name: Send Heartcheck
      run: curl -X GET $HEARTCHECK_URL
